" █ LIBC DICTIONARY – Principais bibliotecas padrão C (com mini-resumo)
" ===================================================================
" Use folding no Vim: zc para fechar, zo para abrir cada biblioteca

" ==== stdio.h ========================================================
" Biblioteca padrão de entrada/saída
" Funções principais: printf, scanf, fopen, fread, fwrite, fclose, fprintf, fscanf
" Uso: manipulação de arquivos, console, fluxo de dados
" ===================================================================
" ==== stdlib.h =======================================================
" Funções para alocação dinâmica, controle de processo, conversão
" malloc, calloc, realloc, free, exit, atoi, atof, system, getenv
" Uso: gerenciamento de memória, manipulação de ambiente, utilitários
" ===================================================================
" ==== string.h =======================================================
" Funções para manipulação e comparação de strings e memória
" strcpy, strncpy, strcat, strlen, strcmp, memcmp, memcpy, memset
" Uso: operações em buffers e strings
" ===================================================================
" ==== unistd.h =======================================================
" Interface POSIX: chamadas de sistema e controle de processos
" read, write, close, fork, execve, pipe, dup, sleep, getpid
" Uso: acesso direto ao sistema, processos, arquivos, I/O
" ===================================================================
" ==== errno.h =======================================================
" Macros e variáveis para erros de sistema e libc
" errno, perror, strerror
" Uso: diagnóstico e tratamento de erros de sistema
" ===================================================================
" ==== math.h ========================================================
" Funções matemáticas padrão
" sin, cos, tan, asin, acos, atan, sqrt, pow, log, exp, fabs
" Uso: cálculos trigonométricos, exponenciais e radicais
" ===================================================================
" ==== time.h ========================================================
" Funções para manipulação de data e tempo
" time, clock, difftime, mktime, nanosleep, strftime
" Uso: temporização, medição de desempenho, formatos de data/hora
" ===================================================================
" ==== pthread.h =====================================================
" API POSIX para programação multithread
" pthread_create, pthread_join, pthread_mutex_lock/unlock, pthread_cond_wait/signal
" Uso: concorrência, sincronização e threads
" ===================================================================
" ==== signal.h ======================================================
" Manipulação e captura de sinais (interrupts)
" signal, sigaction, raise, kill
" Uso: tratamento de sinais, interrupções e exceções
" ===================================================================
" ==== stdarg.h ======================================================
" Manipulação de argumentos variáveis em funções
" va_start, va_arg, va_end
" Uso: funções que recebem número variável de argumentos
" ===================================================================
" ==== setjmp.h ======================================================
" Controle de saltos não locais (exceções básicas)
" setjmp, longjmp
" Uso: controle de fluxo não linear, tratamento básico de erros
" ===================================================================
" ==== locale.h ======================================================
" Internacionalização e suporte a localidade regional
" setlocale, localeconv
" Uso: formatação local, moeda, idioma e cultura
" ===================================================================
" ==== ctype.h =======================================================
" Funções para teste e conversão de caracteres
" isalpha, isdigit, isspace, isupper, islower, toupper, tolower
" Uso: validação e manipulação de caracteres ASCII
" ===================================================================
" ==== stdbool.h =====================================================
" Definição do tipo booleano (_Bool, true, false)
" Uso: suporte a valores booleanos nativos em C
" ===================================================================
" ==== assert.h ======================================================
" Macro para verificação de condições em runtime
" assert
" Uso: debugging, verificação de pré-condições e invariantes
" ===================================================================
" ==== limits.h ======================================================
" Definições de limites para tipos de dados
" CHAR_BIT, INT_MAX, UINT_MAX, LONG_MAX, ULONG_MAX, etc
" Uso: valores máximos e mínimos para tipos nativos
" ===================================================================
" ==== float.h =======================================================
" Limites e propriedades para tipos de ponto flutuante
" FLT_MAX, FLT_MIN, DBL_MAX, DBL_MIN, etc
" Uso: controle de precisão e intervalo de floats/doubles
" ===================================================================
" ==== fcntl.h ===========================================================
" Funções para manipulação avançada de arquivos e descritores
" open, fcntl, creat, lockf, flock
" Uso: controle de flags de arquivos, bloqueios, manipulação low-level
" =======================================================================
" ==== sys/types.h ======================================================
" Definições de tipos básicos para chamadas de sistema e POSIX
" pid_t, size_t, ssize_t, off_t, mode_t, uid_t, gid_t
" Uso: padroniza tipos entre sistema e libc
" =======================================================================
" ==== sys/stat.h =======================================================
" Estruturas e funções para informações de arquivos
" stat, fstat, lstat, chmod, mkdir, mkfifo
" Uso: consulta atributos de arquivos e diretórios
" =======================================================================
" ==== sys/mman.h =======================================================
" Gerenciamento de memória mapeada (mmap)
" mmap, munmap, mprotect, msync, shm_open
" Uso: manipulação avançada de memória e compartilhamento entre processos
" =======================================================================
" ==== sys/socket.h ====================================================
" API para sockets de rede (TCP/IP, UDP)
" socket, bind, listen, accept, connect, send, recv, setsockopt
" Uso: comunicação entre processos locais/remotos via rede
" =======================================================================
" ==== netinet/in.h ====================================================
" Definições para endereços e protocolos de internet (IPv4/IPv6)
" sockaddr_in, in_addr, htons, ntohl
" Uso: manipulação de endereços IP e portas
" =======================================================================
" ==== arpa/inet.h =====================================================
" Conversões entre formatos de IP textual/binário
" inet_pton, inet_ntop, inet_addr
" Uso: conversão de endereços IP para uso em sockets
" =======================================================================
" ==== netdb.h =========================================================
" Resolução de nomes e serviços de rede
" gethostbyname, gethostbyaddr, getaddrinfo, freeaddrinfo
" Uso: tradução de nomes DNS e manipulação de serviços
" =======================================================================
" ==== pwd.h ===========================================================
" Consulta de informações de usuários do sistema
" getpwnam, getpwuid
" Uso: obtenção de dados como UID, GID e diretórios home
" =======================================================================
" ==== grp.h ===========================================================
" Consulta de grupos do sistema
" getgrnam, getgrgid
" Uso: informações sobre grupos de usuários
" =======================================================================
" ==== termios.h =======================================================
" Configuração de terminais e controle de linhas
" tcgetattr, tcsetattr, cfsetispeed, cfsetospeed
" Uso: manipulação avançada de terminais (raw mode, canonical mode)
" =======================================================================
" ==== sys/ioctl.h =====================================================
" Controle de dispositivos via chamadas ioctl
" ioctl
" Uso: operações específicas em dispositivos e drivers
" =======================================================================
" ==== sys/wait.h ======================================================
" Manipulação e espera de processos filhos
" wait, waitpid, wait3, wait4
" Uso: controle de término e status de processos filhos
" =======================================================================
" ==== getopt.h / unistd.h (getopt) ===================================
" Análise de argumentos da linha de comando
" getopt, getopt_long
" Uso: parsing simples e robusto de parâmetros de programas
" =======================================================================
" ==== semaphore.h =====================================================
" Sincronização entre processos com semáforos POSIX
" sem_init, sem_wait, sem_post, sem_destroy
" Uso: controle de concorrência e acesso a recursos compartilhados
" =======================================================================
" ==== pthread.h (cont.) ===============================================
" Threads POSIX, mutexes, variáveis de condição
" pthread_mutex_init, pthread_cond_wait, pthread_cancel
" Uso: controle fino de execução concorrente
" =======================================================================
" ==== locale.h (cont.) ================================================
" Configuração regional e internacionalização
" nl_langinfo, setlocale
" Uso: tradução, formatação regional, moedas, datas
" =======================================================================
" ==== sys/resource.h ==================================================
" Gerenciamento de recursos do sistema (limites)
" getrlimit, setrlimit, getpriority, setpriority
" Uso: controle de uso de CPU, memória, processos
" =======================================================================
" ==== sys/syscall.h ===================================================
" Interface para chamadas de sistema diretas (syscall)
" syscall
" Uso: invocar syscalls sem wrapper libc
" =======================================================================
" ==== execinfo.h ======================================================
" Backtraces e informações de pilha (debug)
" backtrace, backtrace_symbols
" Uso: debugging e análise de crash
" =======================================================================
" ==== search.h ========================================================
" Funções de busca e ordenação (hash, qsort, bsearch)
" tsearch, tfind, lfind, qsort, bsearch
" Uso: estruturas de dados e ordenação
" =======================================================================
" ==== ctype.h (cont.) =================================================
" Mais funções para classificação de caracteres
" iscntrl, isgraph, isprint, ispunct, isxdigit
" Uso: filtros e análises de caracteres específicos
" =======================================================================
" ==== inttypes.h ======================================================
" Definições para tipos inteiros com tamanho fixo e formatação
" int8_t, uint16_t, intmax_t, PRId64, SCNu32
" Uso: portabilidade e formatos precisos
" =======================================================================
" ==== stdint.h ========================================================
" Tipos inteiros fixos
" int8_t, uint8_t, int16_t, uint16_t, int32_t, uint32_t, int64_t, uint64_t
" Uso: tipos de tamanho fixo para portabilidade
" =======================================================================
" ==== syslog.h ========================================================
" Sistema de log do Unix
" syslog, openlog, closelog
" Uso: registro centralizado de eventos
" =======================================================================
" ==== fenv.h ==========================================================
" Controle de ambiente de ponto flutuante
" fegetround, fesetround, feraiseexcept, feclearexcept
" Uso: controle de arredondamentos e exceções FP
" =======================================================================
" ==== ucontext.h ======================================================
" Contexto de execução (registro, pilha) para manipulação avançada
" getcontext, setcontext, swapcontext, makecontext
" Uso: manipulação de contexto de threads/co-rotinas
" =======================================================================
" ==== sys/utsname.h ===================================================
" Informação do sistema (kernel, hostname)
" uname
" Uso: coleta dados do sistema para diagnósticos
" =======================================================================
" ==== langinfo.h ======================================================
" Informação de localidade e cultura (idiomas)
" nl_langinfo
" Uso: suporte avançado a internacionalização
" =======================================================================
" ==== iconv.h ==========================================================
" Conversão entre diferentes codificações de caracteres
" iconv_open, iconv, iconv_close
" Uso: manipulação e conversão de strings entre charsets variados
" ======================================================================
" ==== aio.h ============================================================
" I/O assíncrono: operações de leitura e escrita não bloqueantes
" aio_read, aio_write, aio_error, aio_return
" Uso: aplicações que precisam de alto desempenho sem bloqueio de I/O
" ======================================================================
" ==== sched.h ==========================================================
" Controle e configuração de políticas de escalonamento
" sched_yield, sched_get_priority_max/min, sched_setscheduler
" Uso: afinidade e prioridade de processos/threads
" ======================================================================
" ==== sys/ptrace.h =====================================================
" Interface para depuração e tracing de processos
" ptrace, PTRACE_ATTACH, PTRACE_DETACH, PTRACE_PEEKDATA
" Uso: debugging, injeção e manipulação de processos externos
" ======================================================================
" ==== sys/timerfd.h ====================================================
" Criação e manipulação de timers via descritores de arquivo
" timerfd_create, timerfd_settime, timerfd_gettime
" Uso: timers em sistemas baseados em arquivos (event-driven)
" ======================================================================
" ==== sys/eventfd.h ====================================================
" Comunicação via eventos simples entre processos/threads
" eventfd, eventfd_read, eventfd_write
" Uso: notificações e sincronização eficiente
" ======================================================================
" ==== sys/signalfd.h ===================================================
" Recebimento de sinais via descritores de arquivo
" signalfd, signalfd_read
" Uso: integração de sinais com I/O multiplexado (poll/select)
" ======================================================================
" ==== pthread_np.h =====================================================
" Extensões não portáveis da pthread (Linux-specific)
" pthread_getattr_np, pthread_setname_np
" Uso: manipulação avançada de threads em Linux
" ======================================================================
" ==== poll.h ===========================================================
" Multiplexação de entrada/saída (I/O multiplexing)
" poll, struct pollfd
" Uso: monitorar múltiplos descritores de arquivo
" ======================================================================
" ==== sys/select.h =====================================================
" Multiplexação I/O tradicional
" select, fd_set, FD_SET, FD_ZERO
" Uso: monitoramento de I/O múltiplo
" ======================================================================
" ==== execinfo.h =======================================================
" Backtrace e informações da pilha para debugging
" backtrace, backtrace_symbols
" Uso: análise de falhas e rastreamento de chamadas
" ======================================================================
" ==== ucontext.h =======================================================
" Manipulação e troca de contextos de execução (coroutines, threads)
" getcontext, setcontext, swapcontext, makecontext
" Uso: controle avançado de execução e multitarefa
" ======================================================================
" ==== sys/mount.h ======================================================
" Montagem e desmontagem de sistemas de arquivos
" mount, umount
" Uso: controle de dispositivos e sistemas de arquivos
" ======================================================================
" ==== sys/reboot.h =====================================================
" Comandos para reiniciar, desligar e controlar o sistema
" reboot, reboot(LINUX_REBOOT_CMD_POWER_OFF), reboot(LINUX_REBOOT_CMD_RESTART)
" Uso: controle de energia e reboot programático
" ======================================================================
" ==== sys/shm.h ========================================================
" Memória compartilhada System V
" shmget, shmat, shmdt, shmctl
" Uso: comunicação entre processos via memória compartilhada
" ======================================================================
" ==== sys/msg.h ========================================================
" Filas de mensagens System V
" msgget, msgsnd, msgrcv, msgctl
" Uso: comunicação entre processos via troca de mensagens
" ======================================================================
" ==== sys/sem.h ========================================================
" Semáforos System V
" semget, semop, semctl
" Uso: sincronização entre processos
" ======================================================================
" ==== sys/sysinfo.h ====================================================
" Informações do sistema como memória, CPU, uptime
" sysinfo()
" Uso: monitoramento de recursos e status
" ======================================================================
" ==== sys/timex.h ======================================================
" Ajustes finos de tempo e sincronização (NTP)
" adjtimex, clock_adjtime
" Uso: precisão e ajuste de relógios do sistema
" ======================================================================
" ==== sys/user.h =======================================================
" Estruturas relacionadas a usuários e processos
" struct user_regs_struct, user_fpregs_struct
" Uso: debugging e acesso a registros de processos
" ======================================================================
" ==== sys/capability.h ================================================
" Controle de capacidades de processos (privilégios finos)
" cap_get_proc, cap_set_proc
" Uso: segurança e controle de permissões
" ======================================================================
" ==== sys/prctl.h ======================================================
" Controle de propriedades do processo em tempo de execução
" prctl
" Uso: configuração de comportamento do processo (ex: dump core)
" ======================================================================
" ==== term.h ===========================================================
" Controle de terminais (ncurses e similares)
" tgetent, tgetflag, tgetnum
" Uso: manipulação avançada de terminais em modo texto
" ======================================================================
" ==== ncurses.h ========================================================
" Biblioteca para interfaces em modo texto
" initscr, endwin, getch, printw, refresh
" Uso: construção de interfaces TUI avançadas
" ======================================================================
" ==== getopt.h ==========================================================
" Parsers para opções de linha de comando
" getopt, getopt_long, getopt_long_only
" Uso: facilitar o parsing de argumentos em programas CLI
" ======================================================================
" ==== regex.h ===========================================================
" Expressões regulares POSIX
" regcomp, regexec, regfree
" Uso: correspondência e busca de padrões em strings
" ======================================================================
" ==== inttypes.h =======================================================
" Tipos inteiros exatos e macros de formatação
" int8_t, uint16_t, intmax_t, PRId64, SCNu32
" Uso: portabilidade e formatação precisa
" ======================================================================
" ==== stdint.h =========================================================
" Tipos inteiros de tamanhos fixos
" int8_t, uint8_t, int16_t, uint16_t, int32_t, uint32_t, int64_t, uint64_t
" Uso: tipos portáveis para dados inteiros
" ======================================================================
" ==== complex.h ========================================================
" Suporte a números complexos
" complex, creal, cimag, carg, cabs
" Uso: cálculos com números complexos no padrão C99
" ======================================================================
" ==== fenv.h ===========================================================
" Controle de ambiente de ponto flutuante
" fegetround, fesetround, feraiseexcept
" Uso: manipulação avançada de operações float
" ======================================================================
" ==== iso646.h =========================================================
" Operadores alternativos para C
" and, or, not, bitand, bitor, xor
" Uso: alternativas para operadores lógicos e bit a bit
" ======================================================================
" ==== limits.h =========================================================
" Limites de tipos de dados
" CHAR_BIT, INT_MAX, LONG_MAX
" Uso: constantes para tamanhos máximos e mínimos
" ======================================================================
" ==== stdalign.h =======================================================
" Suporte a alinhamento de dados
" alignas, alignof
" Uso: controle fino do alinhamento de estruturas e variáveis
" ======================================================================
" ==== stdnoreturn.h ====================================================
" Suporte para funções que não retornam
" noreturn
" Uso: indicar funções que não retornam ao compilador
" ======================================================================
" ==== threads.h ========================================================
" Biblioteca de threads padrão C11
" thrd_create, mtx_lock, cnd_wait
" Uso: multithreading portable em C moderno
" ======================================================================
" ==== uchar.h ==========================================================
" Suporte para caracteres Unicode em C11
" char16_t, char32_t
" Uso: manipulação de texto Unicode
" ======================================================================
" ==== wchar.h ==========================================================
" Suporte para caracteres wide (largos)
" wchar_t, wprintf, wscanf
" Uso: manipulação de caracteres Unicode e internacionais
" ======================================================================
" ==== wctype.h =========================================================
" Classificação de caracteres wide
" iswalpha, iswdigit, towlower, towupper
" Uso: operações em caracteres Unicode
" ======================================================================
" ==== tgmath.h =========================================================
" Tipos genéricos para funções matemáticas (macro)
" Uso: chamada genérica para funções matemáticas (float, double, complex)
" ======================================================================
" ==== stdatomic.h ======================================================
" Operações atômicas para concorrência segura
" atomic_load, atomic_store, atomic_fetch_add, atomic_compare_exchange
" Uso: programação lock-free e sincronização entre threads
" ======================================================================
" ==== threads.h (cont.) ================================================
" Complemento para threads padrão C11
" thrd_exit, thrd_sleep, mtx_init, cnd_init
" Uso: controle avançado de threads e sincronização
" ======================================================================
" ==== stdio_ext.h ======================================================
" Extensões GNU para stdio.h
" __fpurge, __fbufsize, __freading, __fwriting
" Uso: manipulação avançada e otimização de fluxos de I/O
" ======================================================================
" ==== malloc.h =========================================================
" Extensões para alocação dinâmica (GNU)
" malloc_trim, malloc_stats, mallinfo
" Uso: análise e ajuste fino da heap
" ======================================================================
" ==== malloc3.h ========================================================
" Variante estendida do malloc (Linux)
" malloc_usable_size, malloc_info
" Uso: informações detalhadas da heap
" ======================================================================
" ==== sys/auxv.h =======================================================
" Acesso a vetor de auxílios do sistema
" getauxval
" Uso: obter informações do kernel e ambiente no runtime
" ======================================================================
" ==== sys/cdefs.h ======================================================
" Macros para definições específicas de compilador e sistema
" __BEGIN_DECLS, __END_DECLS, __P
" Uso: compatibilidade e declarações condicionais
" ======================================================================
" ==== sys/param.h ======================================================
" Parâmetros do sistema e limites
" MAXPATHLEN, NOFILE, HZ
" Uso: configurações e limites do sistema
" ======================================================================
" ==== sys/queue.h ======================================================
" Macros para filas, listas e árvores
" LIST_HEAD, TAILQ_HEAD, SLIST_HEAD
" Uso: estruturas de dados em C
" ======================================================================
" ==== sys/types.h (cont.) ==============================================
" Definições adicionais de tipos
" dev_t, ino_t, nlink_t
" Uso: mais tipos para arquivos e dispositivos
" ======================================================================
" ==== utime.h ==========================================================
" Modificação de timestamps de arquivos
" utime, utimes
" Uso: alterar tempos de acesso e modificação de arquivos
" ======================================================================
" ==== syslog.h (cont.) ================================================
" Controle e uso de logs do sistema
" syslog, openlog, closelog, setlogmask
" Uso: registro de eventos e mensagens do sistema
" ======================================================================
" ==== sys/uio.h =========================================================
" I/O vectorizado (leitura e escrita múltiplos buffers)
" readv, writev, preadv, pwritev
" Uso: operações eficientes de I/O em buffers múltiplos
" ======================================================================
" ==== sys/event.h =======================================================
" APIs para gerenciamento de eventos (FreeBSD, macOS)
" kevent, kqueue
" Uso: I/O multiplexado avançado em sistemas BSD
" ======================================================================
" ==== sys/times.h =======================================================
" Medição de tempos de processos e sistemas
" times, clock_t, tms
" Uso: medir uso de CPU, tempos de usuário e sistema
" ======================================================================
" ==== sys/resource.h (cont.) ===========================================
" Controle de limites e prioridades do processo
" getrlimit, setrlimit, getpriority, setpriority
" Uso: limitar recursos e ajustar prioridades
" ======================================================================
" ==== sys/user.h (cont.) ================================================
" Estruturas para debugging e manipulação de processos
" user_regs_struct, user_fpregs_struct
" Uso: acesso a registros de processo
" ======================================================================
" ==== sys/utsname.h (cont.) ============================================
" Informações do sistema e kernel
" uname
" Uso: obter nome do sistema, versão do kernel, arquitetura
" ======================================================================
" ==== sys/acl.h =========================================================
" Controle de listas de controle de acesso (ACL)
" acl_get_file, acl_set_file
" Uso: segurança avançada em sistemas de arquivos
" ======================================================================
" ==== sys/capability.h (cont.) =========================================
" Gerenciamento de capacidades do Linux
" cap_get_proc, cap_set_proc
" Uso: controle granular de permissões
" ======================================================================
" ==== sys/prctl.h (cont.) ===============================================
" Controle de propriedades do processo
" prctl
" Uso: configurar opções do processo em runtime
" ======================================================================
" ==== sys/syscall.h (cont.) =============================================
" Interface para chamadas diretas ao kernel
" syscall
" Uso: invocar syscalls sem wrappers libc
" ======================================================================
" ==== sys/xattr.h =======================================================
" Atributos estendidos de arquivos
" getxattr, setxattr, listxattr
" Uso: metadados avançados para arquivos
" ======================================================================
" ==== sys/ptrace.h (cont.) =============================================
" Interface de tracing e debugging
" ptrace
" Uso: depuração de processos e injeção de código
" ======================================================================
" ==== sys/utsname.h (cont.) ============================================
" Informação do sistema operacional
" uname
" Uso: obter informações sobre o sistema para diagnóstico
" ======================================================================
" ==== ctype.h ===========================================================
" Funções para classificação e transformação de caracteres ASCII
" isalpha, isdigit, isspace, isupper, islower, toupper, tolower, isxdigit, ispunct
" Uso: validação, filtragem e manipulação de caracteres
" =======================================================================
" ==== wchar.h ===========================================================
" Manipulação de caracteres largos (wide chars) e Unicode
" wchar_t, wprintf, wscanf, wcscmp, wcslen, iswalpha, towlower
" Uso: suporte a textos internacionais e multilinguagem
" =======================================================================
" ==== wctype.h ==========================================================
" Classificação de caracteres largos
" iswalpha, iswdigit, iswspace, towupper, towlower
" Uso: validação e conversão de wide chars
" =======================================================================
" ==== stdalign.h ========================================================
" Suporte a alinhamento de dados em C11
" alignas, alignof
" Uso: controle fino de alinhamento para performance e compatibilidade
" =======================================================================
" ==== stdatomic.h =======================================================
" Operações atômicas para programação concorrente segura
" atomic_load, atomic_store, atomic_fetch_add, atomic_compare_exchange
" Uso: lock-free programming e sincronização eficiente
" =======================================================================
" ==== stdbool.h =========================================================
" Definição do tipo booleano padrão em C (true/false)
" Uso: facilitar o uso de booleanos em C
" =======================================================================
" ==== stdnoreturn.h =====================================================
" Macro para indicar funções que não retornam (noreturn)
" Uso: otimização e clareza no código
" =======================================================================
" ==== tgmath.h ==========================================================
" Macros para operações matemáticas genéricas (float, double, complex)
" Uso: simplificação do código matemático genérico
" =======================================================================
" ==== complex.h =========================================================
" Suporte a números complexos em C99
" complex, creal, cimag, carg, cabs
" Uso: cálculos científicos e engenharia com números complexos
" =======================================================================
" ==== fenv.h ============================================================
" Controle do ambiente de ponto flutuante (exceções, arredondamento)
" fegetround, fesetround, feraiseexcept, feclearexcept
" Uso: programação numérica precisa e controle de erros em float
" =======================================================================
" ==== iso646.h ==========================================================
" Operadores alternativos para operadores lógicos e bit a bit
" and, or, not, bitand, bitor, xor
" Uso: código mais legível ou compatibilidade com certos compiladores
" =======================================================================
" ==== stdint.h ==========================================================
" Tipos inteiros de tamanho fixo para portabilidade
" int8_t, uint8_t, int16_t, uint16_t, int32_t, uint32_t, int64_t, uint64_t
" Uso: manipulação precisa de dados binários e comunicação entre sistemas
" =======================================================================
" ==== inttypes.h ========================================================
" Macros para formatação e leitura de tipos inteiros fixos
" PRId32, PRIu64, SCNx8, etc.
" Uso: garantir portabilidade em printf/scanf com tipos inteiros fixos
" =======================================================================
" ==== wchar.h ===========================================================
" Manipulação avançada de strings e caracteres largos (Unicode)
" wprintf, wscanf, wcscmp, wcslen, wcsncpy
" Uso: textos internacionais e multilinguagem
" =======================================================================
" ==== iso8859-1.h (não padrão) =========================================
" Codificação ISO-8859-1 (Latin-1) para manipulação de texto
" Uso: suporte a textos em línguas ocidentais antigas
" =======================================================================
" ==== iconv.h ===========================================================
" Conversão entre diferentes codificações de caracteres
" iconv_open, iconv, iconv_close
" Uso: conversão de charset em sistemas internacionais
" =======================================================================
" ==== langinfo.h ========================================================
" Informações culturais e locais para internacionalização
" nl_langinfo, CODESET, RADIXCHAR
" Uso: localização de software e formatação cultural
" =======================================================================
" ==== locale.h ==========================================================
" Configuração e uso da localidade do sistema
" setlocale, localeconv
" Uso: adaptar formatos de data, moeda, números conforme localidade
" =======================================================================
" ==== mqueue.h ==========================================================
" Filas de mensagens POSIX
" mq_open, mq_send, mq_receive, mq_close
" Uso: comunicação entre processos com mensagens assíncronas
" =======================================================================
" ==== pthread.h =========================================================
" Threads POSIX: criação, sincronização e gerenciamento
" pthread_create, pthread_join, pthread_mutex_lock/unlock, pthread_cond_wait/signal
" Uso: programação concorrente e multithread
" =======================================================================
" ==== semaphore.h =======================================================
" Semáforos POSIX para sincronização entre processos/threads
" sem_init, sem_wait, sem_post, sem_destroy
" Uso: controle de acesso a recursos compartilhados
" =======================================================================
" ==== sys/ipc.h =========================================================
" Chaves e controle de IPC (interprocess communication) System V
" ftok, IPC_CREAT, IPC_RMID
" Uso: criação e controle de filas, semáforos e memória compartilhada
" =======================================================================
" ==== sys/shm.h =========================================================
" Memória compartilhada System V
" shmget, shmat, shmdt, shmctl
" Uso: comunicação rápida entre processos via memória
" =======================================================================
" ==== sys/msg.h =========================================================
" Filas de mensagens System V
" msgget, msgsnd, msgrcv, msgctl
" Uso: troca de mensagens entre processos
" =======================================================================
" ==== sys/utsname.h =====================================================
" Informação do sistema (kernel, hostname, arquitetura)
" uname
" Uso: diagnóstico e coleta de dados do ambiente
" =======================================================================
" ==== sys/sysinfo.h =====================================================
" Informações do sistema e recursos (memória, uptime)
" sysinfo()
" Uso: monitoramento de recursos
" =======================================================================
" ==== sys/resource.h ====================================================
" Controle de limites e prioridades de recursos
" getrlimit, setrlimit, getpriority, setpriority
" Uso: controle do uso de CPU, memória e I/O
" =======================================================================
" ==== sys/time.h ========================================================
" Manipulação de tempo e timers (gettimeofday, settimeofday)
" Uso: temporizações, timestamps e cronômetros
" =======================================================================
" ==== sys/times.h =======================================================
" Medição de tempo de processos (times)
" Uso: análise de uso de CPU e tempo de execução
" =======================================================================
" ==== sys/utsname.h =====================================================
" Coleta de informações do sistema operacional
" uname
" Uso: versão do kernel, hostname, arquitetura, etc
" =======================================================================
" ==== netdb.h ===========================================================
" Resolução de nomes e serviços de rede
" gethostbyname, gethostbyaddr, getaddrinfo, freeaddrinfo
" Uso: tradução DNS e resolução de IPs para conexões
" =======================================================================
" ==== netinet/in.h ======================================================
" Definições para protocolos IP (IPv4/IPv6) e sockets
" sockaddr_in, sockaddr_in6, in_addr, htons, ntohl
" Uso: manipulação e configuração de endereços de rede
" =======================================================================
" ==== arpa/inet.h =======================================================
" Conversões de endereços IP (texto <-> binário)
" inet_pton, inet_ntop, inet_addr
" Uso: manipulação e conversão de endereços IP em sockets
" =======================================================================
" ==== sys/socket.h ======================================================
" API para criação e manipulação de sockets (TCP, UDP)
" socket, bind, listen, accept, connect, send, recv, setsockopt
" Uso: comunicação entre processos e máquinas via rede
" =======================================================================
" ==== sys/select.h ======================================================
" Multiplexação tradicional de I/O
" select, FD_SET, FD_ZERO, FD_ISSET
" Uso: monitorar múltiplos descritores de arquivo para I/O
" =======================================================================
" ==== poll.h ============================================================
" Multiplexação de I/O mais moderna que select
" poll, struct pollfd
" Uso: monitoramento eficiente de múltiplos I/O
" =======================================================================
" ==== sys/epoll.h =======================================================
" Multiplexação de eventos para alta performance (Linux)
" epoll_create, epoll_ctl, epoll_wait
" Uso: I/O multiplexado eficiente para aplicações escaláveis
" =======================================================================
" ==== crypto/openssl/sha.h (externa) ===================================
" Funções SHA para hashing criptográfico
" SHA1, SHA256, SHA512
" Uso: integridade, assinaturas e segurança de dados
" =======================================================================
" ==== crypto/openssl/md5.h (externa) ===================================
" Funções MD5 para hashing (não recomendado para segurança)
" MD5_Init, MD5_Update, MD5_Final
" Uso: verificação rápida de integridade (não seguro)
" =======================================================================
" ==== zlib.h (externa) ==================================================
" Biblioteca para compressão e descompressão de dados
" deflate, inflate, compress, uncompress
" Uso: compressão de dados para performance e armazenamento
" =======================================================================
" ==== pthread.h =========================================================
" Threads POSIX e sincronização
" pthread_create, pthread_mutex_lock/unlock, pthread_cond_wait/signal
" Uso: programação concorrente multithread
" =======================================================================
" ==== sys/mman.h ========================================================
" Mapeamento de memória (memória virtual)
" mmap, munmap, mprotect
" Uso: manipulação de memória compartilhada e arquivos
" =======================================================================
" ==== sys/stat.h ========================================================
" Informação sobre arquivos e permissões
" stat, fstat, lstat, chmod, mkdir
" Uso: gerenciamento de arquivos e diretórios
" =======================================================================
" ==== fcntl.h ===========================================================
" Controle avançado de arquivos e descritores
" open, fcntl, creat, lockf, flock
" Uso: manipulação low-level de arquivos e bloqueios
" =======================================================================
" ==== unistd.h ==========================================================
" Interface POSIX básica
" read, write, close, fork, exec, pipe, dup
" Uso: chamadas de sistema essenciais
" =======================================================================
" ==== stdlib.h ==========================================================
" Funções utilitárias gerais
" malloc, free, atoi, getenv, exit, system
" Uso: alocação, conversão, ambiente e controle de programa
" =======================================================================
" ==== stdio.h ===========================================================
" Entrada e saída padrão
" printf, scanf, fopen, fread, fwrite, fclose
" Uso: manipulação de arquivos e terminal
" =======================================================================
" ==== string.h ==========================================================
" Manipulação de strings e memória
" strcpy, strlen, memcpy, memcmp, memset, strstr, strchr
" Uso: manipulação básica de buffers e strings
" =======================================================================
" ==== errno.h ===========================================================
" Definições de códigos de erro do sistema
" errno, perror, strerror
" Uso: diagnóstico e tratamento de erros
" =======================================================================
" ==== signal.h ==========================================================
" Manipulação de sinais UNIX
" signal, sigaction, raise
" Uso: tratamento de eventos assíncronos
" =======================================================================
" ==== syslog.h ===========================================================
" Interface para logging do sistema
" syslog, openlog, closelog, setlogmask
" Uso: registrar eventos e mensagens do sistema
" =======================================================================
" ==== langinfo.h ========================================================
" Informação de localização e internacionalização
" nl_langinfo, CODESET, RADIXCHAR
" Uso: suporte a localização de software
" =======================================================================
" ==== mqueue.h ==========================================================
" Filas de mensagens POSIX para IPC
" mq_open, mq_send, mq_receive, mq_close
" Uso: troca de mensagens entre processos de forma assíncrona
" =======================================================================
" ==== semaphore.h =======================================================
" Semáforos POSIX para controle de acesso
" sem_init, sem_wait, sem_post, sem_destroy
" Uso: sincronização entre threads e processos
" =======================================================================
" ==== netinet/tcp.h =====================================================
" Definições para TCP (protocolo de transporte)
" TCP_NODELAY, TCP_MAXSEG
" Uso: configuração e controle de conexões TCP
" =======================================================================
" ==== netinet/udp.h =====================================================
" Definições para UDP (protocolo de transporte)
" Uso: configuração básica de UDP
" =======================================================================
" ==== netinet/ip.h ======================================================
" Cabeçalhos do protocolo IP
" Uso: manipulação avançada de pacotes IP
" =======================================================================
" ==== arpa/nameser.h ====================================================
" Protocolo DNS (resolução de nomes)
" Uso: manipulação de mensagens DNS
" =======================================================================
" ==== resolv.h ==========================================================
" Resolução de nomes DNS
" res_query, res_search
" Uso: funções DNS básicas para resolução de domínios
" =======================================================================
" ==== net/if.h ==========================================================
" Interface de rede (configuração e controle)
" ifreq, ioctl SIOCGIFADDR
" Uso: obter e configurar interfaces de rede
" =======================================================================
" ==== sys/ioctl.h =======================================================
" Interface para chamadas ioctl
" ioctl
" Uso: controle e configuração de dispositivos e drivers
" =======================================================================
" ==== crypt.h ===========================================================
" Funções de criptografia (desatualizado em favor de libs externas)
" crypt
" Uso: hashing simples de senhas (não recomendado para uso seguro)
" =======================================================================
" ==== sys/utsname.h =====================================================
" Estrutura para obter info do sistema
" uname
" Uso: informações de kernel, hostname, arquitetura
" =======================================================================
" ==== pthread_np.h ======================================================
" Extensões não portáveis para pthread (Linux)
" pthread_setname_np, pthread_getattr_np
" Uso: manipulação avançada de threads
" =======================================================================
" ==== sys/eventfd.h =====================================================
" Descritor de arquivo para notificações de eventos
" eventfd, eventfd_read, eventfd_write
" Uso: notificações eficientes entre threads/processos
" =======================================================================
" ==== sys/signalfd.h ====================================================
" Recepção de sinais via descritor de arquivo
" signalfd
" Uso: integrar sinais em loop de eventos
" =======================================================================
" ==== sys/timerfd.h =====================================================
" Timers baseados em descritor de arquivo
" timerfd_create, timerfd_settime
" Uso: timers eficientes para aplicações event-driven
" =======================================================================
" ==== sys/ptrace.h ======================================================
" Interface para tracing de processos
" ptrace, PTRACE_ATTACH, PTRACE_DETACH
" Uso: debugging e manipulação de processos
" =======================================================================
" ==== locale.h ===========================================================
" Configuração e manipulação da localidade do programa
" setlocale, localeconv
" Uso: adaptar formatos de moeda, números, datas e textos para diferentes regiões
" =======================================================================
" ==== math.h =============================================================
" Funções matemáticas padrão C
" sin, cos, tan, sqrt, pow, exp, log, fabs, ceil, floor
" Uso: cálculos matemáticos precisos para engenharia e ciência
" =======================================================================
" ==== pwd.h ==============================================================
" Estruturas e funções para gerenciamento de usuários
" getpwnam, getpwuid, struct passwd
" Uso: obter informações de usuários no sistema
" =======================================================================
" ==== regex.h ===========================================================
" Manipulação de expressões regulares POSIX
" regcomp, regexec, regfree
" Uso: buscas e validações avançadas em strings
" =======================================================================
" ==== sched.h ===========================================================
" Controle de escalonamento de processos e threads
" sched_yield, sched_get_priority_max, sched_setscheduler
" Uso: controle de prioridade e afinidade de execução
" =======================================================================
" ==== stddef.h ==========================================================
" Definições básicas de tipos e macros
" size_t, ptrdiff_t, offsetof, NULL
" Uso: tipos essenciais para manipulação de memória e ponteiros
" =======================================================================
" ==== stdio_ext.h =======================================================
" Extensões GNU para manipulação avançada de stdio
" __fpurge, __fbufsize, __freading, __fwriting
" Uso: controle fino de buffers de entrada/saída
" =======================================================================
" ==== strings.h =========================================================
" Funções extras para manipulação de strings
" strcasecmp, strncasecmp, bzero, bcopy
" Uso: comparações case-insensitive, manipulação de buffers
" =======================================================================
" ==== sys/acl.h =========================================================
" Controle de listas de controle de acesso (ACL)
" acl_get_file, acl_set_file, acl_get_entry
" Uso: segurança e permissões avançadas em arquivos e diretórios
" =======================================================================
" ==== sys/event.h =======================================================
" API para gerenciamento avançado de eventos (BSD, macOS)
" kevent, kqueue
" Uso: monitoramento eficiente de eventos e I/O multiplexado
" =======================================================================
" ==== sys/syscall.h =====================================================
" Interface para chamadas diretas ao kernel
" syscall
" Uso: invocar syscalls diretamente, bypassando wrappers libc
" =======================================================================
" ==== sys/timex.h =======================================================
" Ajustes finos no tempo do sistema (NTP)
" adjtimex, clock_adjtime
" Uso: sincronização precisa do relógio do sistema
" =======================================================================
" ==== sys/wait.h ========================================================
" Espera por término de processos filhos
" wait, waitpid, wait3, wait4
" Uso: controle e gerenciamento de processos filhos
" =======================================================================
" ==== termios.h =========================================================
" Controle avançado de terminais e dispositivos TTY
" tcgetattr, tcsetattr, cfmakeraw
" Uso: configuração de modo raw, controle de fluxo, manipulação de terminal
" =======================================================================
" ==== uchar.h ===========================================================
" Suporte a caracteres Unicode (C11)
" char16_t, char32_t
" Uso: manipulação avançada de strings Unicode
" =======================================================================
" ==== xlocale.h =========================================================
" Extensões para manipulação avançada de localidade (não padrão)
" Uso: manipulação de múltiplas localidades simultaneamente
" =======================================================================

